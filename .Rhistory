primary.outcome.all <- "ofhact_all" #intention to participate, including unsure
gen.outcome.preventable.binary <- "GENFBACK_prevent_agree"
gen.outcome.preventable.all <- "GENFBACK_prevent_all"
gen.outcome.nonpreventable.binary <- "GENFBACK_no_prevent_agree"
gen.outcome.nonpreventable.all <- "GENFBACK_no_prevent_all"
gen.outcome.ancestry.binary <- "GENFBACK_ancestry_agree"
gen.outcome.ancestry.all <- "GENFBACK_ancestry_all"
outcomes <- c("ofhact_agree","ofhact_all",
"GENFBACK_prevent_agree","GENFBACK_prevent_all",
"GENFBACK_no_prevent_agree","GENFBACK_no_prevent_all",
"GENFBACK_ancestry_agree","GENFBACK_ancestry_all")
# Chunk 29: list of independent vars for univariable analyses
pred.participate.vars <- c(
"MDQuintile",  "AGE_BAND",
"SEX", "ETHNICITY_LFS", "NUMPEOPLE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_TABLET", "DEVICE_CPU", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION",
"EDUCATION",  "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"LIFEEVENT", "PROSO_EVER_TOTAL","PROSO4W_TOTAL",
"GENFAM", "GENTEST",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL",
"HACT12_1", "HACT12_2", "HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "UNDERST", "OFHACT",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN", "OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3", "GENFBACK_1",
"GENFBACK_2", "GENFBACK_3", "PARTNA", "PARTNB", "OFHACT2", "RECONTACT",
"GENFBACK_prevent_agree",
"GENFBACK_prevent_all", "GENFBACK_no_prevent_agree", "GENFBACK_no_prevent_all",
"GENFBACK_ancestry_agree", "GENFBACK_ancestry_all")
pred.gen.vars <-c(
"MDQuintile",  "AGE_BAND",
"SEX", "ETHNICITY_LFS", "NUMPEOPLE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_TABLET", "DEVICE_CPU", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION",
"EDUCATION",  "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"LIFEEVENT", "PROSO_EVER_TOTAL","PROSO4W_TOTAL",  "GENFAM", "GENTEST",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL","HACT12_1", "HACT12_2", "HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "UNDERST", "OFHACT",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN", "OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3",
"PARTNA", "PARTNB", "OFHACT2", "RECONTACT","ofhact_agree", "ofhact_all", "ofhact_unsure")
all.pred.vars <- c(
"MDQuintile",  "AGE_BAND",
"SEX", "ETHNICITY_LFS", "NUMPEOPLE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_TABLET", "DEVICE_CPU", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION",
"EDUCATION",  "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"LIFEEVENT", "PROSO_EVER_TOTAL","PROSO4W_TOTAL", "GENFAM", "GENTEST",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL","HACT12_1", "HACT12_2", "HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "UNDERST", "OFHACT",
"OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3",
"PARTNA", "PARTNB", "OFHACT2", "RECONTACT")
gated.pred.vars <- c("GENTEST_1",
"GENTEST_2", "GENTEST_3", "GENTEST_4", "GENTEST_5", "GENTEST_5OPEN",
"GENTTYP_1", "GENTTYP_2", "GENTTYP_3", "GENTTYP_4", "GENTTYP_5",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN")
factor_df %>%
select(dem.vars) %>%
frequency_and_plot(.)
factor_df %>%
select(all_of(dem.vars)) %>%
frequency_and_plot()
apply(factor_df[dem.vars],1,frequency_and_plot())
for (i in dem.vars){
frequency_and_plot(factor_df,i)
}
for (i in dem.vars){
print(i)
frequency_and_plot(factor_df,i)
}
class(factor_df$MDQuintile)
factor_df$MDQuintile
frequency_and_plot(factor_df$Asian_filter)
frequency_and_plot(factor_df,Asian_filter)
for (i in dem.vars){
print(i)
frequency_and_plot(factor_df,i)
}
frequency_and_plot(factor_df,Asian_filter)
frequency_and_plot(factor_df,Asian_filter)
factor_df <- factor_df %>%
mutate(SCITRUST_TOTAL = 0 + (rowSums(factor_df[science_cols] == "Strongly agree") * 2) +
(rowSums(factor_df[science_cols] == "Agree")) +
(rowSums(factor_df[science_cols] == "Disagree") * -1) +
(rowSums(factor_df[science_cols] == "Strongly disagree") * -2)
)
factor_df = apply_labels(factor_df,
SCITRUST_TOTAL="Composite score indicating trust or distrust in science overall. A negative score indicates greater distrust overall and a positive score indicates greater trust overall.")
factor_df %>%
select(starts_with("TRUST")) %>%
skim() %>%
select(skim_type, skim_variable, n_missing, numeric.mean, numeric.sd,numeric.hist)
table(factor_df$TRUSTGEN)
dput(sapply(factor_df[trust_vars],label))
# Chunk 1
# clear global environment
remove(list = ls())
# Chunk 2: setup
# source in all functions in the function library folder
files.sources = paste0("./functions/",list.files("./functions"))
sapply(files.sources, source)
knitr::opts_chunk$set(echo = TRUE,
comment=NA,
prompt=FALSE,
cache=FALSE)
# this chunk installs any required packages if you dont already have them in your local library.
# List of required package names
packages <- c("ggplot2","gtsummary","kableExtra",
"purrr", "skimr","readr",
"readxl","psych",
"haven", "expss",
"summarytools","stringr",
"dplyr", "tidyr")
# apply function to install and load functions as needed. Prints version to screen.
# see function library for code (../functions)
load_packages(packages)
# Chunk 3: ggplot theme
theme_personal <-  function(){theme(
text = element_text(color = "black"),
title = element_text(size = 12),
axis.title = element_text(color = "black",
size = 10),
axis.text = element_text(color = "black",
size=9),
axis.title.y = element_blank(),
axis.line = element_line(colour = "black",
size = 1, linetype = "solid"),
legend.background = element_blank(),
legend.box.background = element_blank(),
panel.background = element_blank(),
panel.grid.minor.y = element_line(
colour = "gray",
linetype = "dashed",
size = 0.1
),
panel.grid.major.y = element_line(
colour = "gray",
linetype = "dashed",
size = 0.2
),
axis.ticks = element_blank()
)}
# Chunk 4: read in raw data
#import data
df <- read_sav("/Users/kirstinpurves/Library/CloudStorage/OneDrive-SharedLibraries-OurFutureHealth/Main Share - Documents/Our Future Health - Project Team/Behavioural Science/Public attitudes survey 2021/Raw data DO NOT EDIT/262323129-40C_Our Future Health_Dataset_FINAL.sav")
# Chunk 5: quick view of file structure and contents
skim(df)
# Chunk 6: convert to labelled factor
factor_df <- df %>%
mutate_if(is.labelled,as_factor)
# Chunk 7: skim factor df
skim(factor_df)
# Chunk 8: create new variables
factor_df <- factor_df %>%
mutate(ofhact_agree =
as.factor(case_when(OFHACT == "Yes definitely" ~ "Yes",
OFHACT == "Yes probably" ~ "Yes",
OFHACT == "No, probably not" ~ "No",
OFHACT == "No, definitely not" ~ "No",
OFHACT == "Not sure / it depends" ~ "No")),
ofhact_all =
as.factor(case_when(OFHACT == "Yes definitely" ~ "Yes",
OFHACT == "Yes probably" ~ "Yes",
OFHACT == "No, probably not" ~ "No",
OFHACT == "No, definitely not" ~ "No",
OFHACT == "Not sure / it depends" ~ "Unsure")),
ofhact_unsure =
as.factor(case_when(OFHACT == "Yes definitely" ~ NA_character_,
OFHACT == "Yes probably" ~ NA_character_,
OFHACT == "No, probably not" ~ "No",
OFHACT == "No, definitely not" ~ "No",
OFHACT == "Not sure / it depends" ~ "Unsure")),
GENFBACK_prevent_agree =
as.factor(case_when(GENFBACK_1 == "Yes definitely" ~ "Yes",
GENFBACK_1 == "Yes probably" ~ "Yes",
GENFBACK_1 == "No, probably not" ~ "No",
GENFBACK_1 == "No, definitely not" ~ "No",
GENFBACK_1 == "Not sure / it depends" ~ "No",
GENFBACK_1 == "Prefer not to say" ~ "Prefer not to say")),
GENFBACK_prevent_all =
as.factor(case_when(GENFBACK_1 == "Yes definitely" ~ "Yes",
GENFBACK_1 == "Yes probably" ~ "Yes",
GENFBACK_1 == "No, probably not" ~ "No",
GENFBACK_1 == "No, definitely not" ~ "No",
GENFBACK_1 == "Not sure / it depends" ~ "Unsure",
GENFBACK_1 == "Prefer not to say" ~ "Prefer not to say")),
GENFBACK_no_prevent_agree =
as.factor(case_when(GENFBACK_2 == "Yes definitely" ~ "Yes",
GENFBACK_2 == "Yes probably" ~ "Yes",
GENFBACK_2 == "No, probably not" ~ "No",
GENFBACK_2 == "No, definitely not" ~ "No",
GENFBACK_2 == "Not sure / it depends" ~ "No",
GENFBACK_2 == "Prefer not to say" ~ "Prefer not to say")),
GENFBACK_no_prevent_all =
as.factor(case_when(GENFBACK_2 == "Yes definitely" ~ "Yes",
GENFBACK_2 == "Yes probably" ~ "Yes",
GENFBACK_2 == "No, probably not" ~ "No",
GENFBACK_2 == "No, definitely not" ~ "No",
GENFBACK_2 == "Not sure / it depends" ~ "Unsure",
GENFBACK_2 == "Prefer not to say" ~ "Prefer not to say")),
GENFBACK_ancestry_agree =
as.factor(case_when(GENFBACK_3 == "Yes definitely" ~ "Yes",
GENFBACK_3 == "Yes probably" ~ "Yes",
GENFBACK_3 == "No, probably not" ~ "No",
GENFBACK_3 == "No, definitely not" ~ "No",
GENFBACK_3 == "Not sure / it depends" ~ "No",
GENFBACK_3 == "Prefer not to say" ~ "Prefer not to say")),
GENFBACK_ancestry_all =
as.factor(case_when(GENFBACK_3 == "Yes definitely" ~ "Yes",
GENFBACK_3 == "Yes probably" ~ "Yes",
GENFBACK_3 == "No, probably not" ~ "No",
GENFBACK_3 == "No, definitely not" ~ "No",
GENFBACK_3 == "Not sure / it depends" ~ "Unsure",
GENFBACK_3 == "Prefer not to say" ~ "Prefer not to say")),
MARSTAT =
as.factor(case_when(MARSTAT == "Missing reponse" ~ "Missing reponse",
MARSTAT == "Married" ~ "Married/civil partnership",
MARSTAT == "In a same-sex civil partnership" ~ "Married/civil partnership",
MARSTAT == "Neither" ~ "Neither",
MARSTAT == "Prefer not to say" ~ "Prefer not to say")))
# Chunk 9: add variable labels
factor_df = apply_labels(factor_df,
ofhact_agree="Based on what you now know about the Our Future Health research programme, would you take part in it if you were invited to?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not Not sure / it depends", ofhact_all="Based on what you now know about the Our Future Health research programme, would you take part in it if you were invited to?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not; Unsure = Not sure / it depends",
ofhact_unsure="Based on what you now know about the Our Future Health research programme, would you take part in it if you were invited to?
Levels: NA = Yes definitely Yes probably; No =  No, probably not No, definitely not; Unsure = Not sure / it depends",
GENFBACK_prevent_agree="Genetic feedback for conditions that ARE prevetable or treatable (e.g. type 2 diabetes, heart disease)?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not Not sure / it depends",
GENFBACK_prevent_all="Genetic feedback for conditions that ARE prevetable or treatable (e.g. type 2 diabetes, heart disease)?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not; Unsure = Not sure / it depends",
GENFBACK_no_prevent_agree="Genetic feedback for conditions that ARE NOT prevetable or treatable (e.g. some types of dementia)?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not Not sure / it depends",
GENFBACK_no_prevent_all="Genetic feedback for conditions that ARE NOT prevetable or treatable (e.g. some types of dementia)?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not; Unsure = Not sure / it depends",
GENFBACK_ancestry_agree="Genetic feedback for ancestry?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not Not sure / it depends",
GENFBACK_ancestry_all="Genetic feedback for ancestry?
Levels: Yes = Yes definitely Yes probably; No =  No, probably not No, definitely not; Unsure = Not sure / it depends",
OFHBEN_1="OFH will... advance medical research"
,OFHBEN_2="OFH will... better treatments"
,OFHBEN_3="OFH will... early detection"
,OFHBEN_4="OFH will... help me"
,OFHBEN_5="OFH will... help family/friends"
,OFHBEN_6="OFH will... help community"
,OFHBEN_7="OFH will... help people in UK"
,OFHBEN_8="OFH will... help people in world"
,OFHBEN_9="OFH will... help representation of people like me"
,BARRSA_1="Comfortable health info in large database"
,BARRSA_2="Comfortable share health info with OFH"
,BARRSA_3="Comfortable how OFH use health info"
,BARRSA_4="Comfortable OFH access to medical records"
,BARRSB_1="Comfortable academics access to health records"
,BARRSB_2="Comfortable companies access to health records"
,BLOODS_1="Willing give sample if part of routine blood test"
,BLOODS_2="Willing give sample if soley for OFH"
,BLOODS_3="Difficult to give sample on weekday"
,BLOODS_4="Difficult to give sample on weekend"
,PRACBAR_2="have time for 10 min questionnaire"
,PRACBAR_3="have time for 30 min questionnaire")
# Chunk 10: print old vals and tables
levels(factor_df$RELIGIOSITY)
table(factor_df$RELIGIOSITY)
# Chunk 11: fix value labels
levels(factor_df$RELIGIOSITY) <- c("Missing reponse","Practising","Not practising","Not religious")
levels(factor_df$MARSTAT) <- c("Missing reponse","Married/civil partnership","Neither","Prefer not to say")
# Chunk 12: print new vals and tables
levels(factor_df$RELIGIOSITY)
table(factor_df$RELIGIOSITY)
# Chunk 13: grab trust labels
trust_vars <- factor_df %>%
colnames()
trust_labels <- dput(sapply(factor_df,label))
# Chunk 14: transform trust to numeric
factor_df <- factor_df %>%
mutate(across(starts_with("TRUST"),
~as.numeric(case_when(. == "0 - Do not trust at all" ~ 0,
. == "10 - Trust completely" ~ 10,
. == "1" ~ 1,
. == "2" ~ 2,
. == "3" ~ 3,
. == "4" ~ 4,
. == "5" ~ 5,
. == "6" ~ 6,
. == "7" ~ 7,
. == "8" ~ 8,
. == "9" ~ 9,
TRUE ~ NA_real_ ))))
# Chunk 15: add trust labels back
label(factor_df) = as.list(trust_labels[match(names(factor_df), names(trust_labels))])
# Chunk 16: show trust variables
factor_df %>%
select(starts_with("TRUST")) %>%
skim() %>%
select(skim_type, skim_variable, n_missing, numeric.mean, numeric.sd,numeric.hist)
table(factor_df$TRUSTGEN)
dput(sapply(factor_df[trust_vars],label))
# Chunk 17: sum score vectors digi proficiency
# Digital proficiency
Digprof_cols <- factor_df %>%
select(contains("DIGPROF")) %>%
colnames()
lapply(factor_df[Digprof_cols],label)
# Chunk 18: sum score vectors prosocial ever
# Volunteering ever
Volunteering.ever_cols <- factor_df %>%
select(contains("PROSO_"),
-"PROSO_NONE") %>%
colnames()
lapply(factor_df[Volunteering.ever_cols],label)
# Chunk 19: sum score vectors prosocial 4 weeks
# Volunteering ever
Volunteering.4_cols <- factor_df %>%
select(contains("PROSO4W_"),
-"PROSO4W_NONE") %>%
colnames()
lapply(factor_df[Volunteering.4_cols],label)
# Chunk 20: sum score vectors science
# Volunteering 4 weeks
science_cols <- factor_df %>%
select(contains("SCI"),
-c("SCIINF","SCIINT")) %>%
colnames()
lapply(factor_df[science_cols],label)
# Chunk 21: sum score vectors research participation
# Volunteering 4 weeks
participation_cols <- factor_df %>%
select(contains("HRES"),
-c("HRES_NONE","HRES_DK")) %>%
colnames()
lapply(factor_df[participation_cols],label)
# Chunk 22: create digital proficiency sum score
factor_df <- factor_df %>%
mutate(DIGPROF_TOTAL = 0 + rowSums(factor_df[Digprof_cols] == "Not very confident") +
(rowSums(factor_df[Digprof_cols] == "Fairly confident")*2) +
(rowSums(factor_df[Digprof_cols] == "Very confident")*3))
factor_df = apply_labels(factor_df,
DIGPROF_TOTAL="Composite score indicating overall ease of use of internet for life admin. Minimum 0 indicating not at all confident and maximum of 15 indicating very confident")
# Chunk 23: create prosocial sum scores
factor_df <- factor_df %>%
mutate(PROSO_EVER_TOTAL = 0 + rowSums(factor_df[Volunteering.ever_cols] == "Yes"),
PROSO4W_TOTAL = 0 + rowSums(factor_df[Volunteering.4_cols] == "Yes"),
)
factor_df = apply_labels(factor_df,
PROSO_EVER_TOTAL="Composite score indicating number of pro social activities ever undertaken. Minimum score of 0 indicates none of the three were endorsed, maximum of 3 indicates all activities endorsed",
PROSO4W_TOTAL="Composite score indicating number of pro social activities undertaken in the past 4 weeks. Minimum score of 0 indicates none of the three were endorsed, maximum of 3 indicates all activities endorsed")
# Chunk 24: create trust in science  sum score
factor_df <- factor_df %>%
mutate(SCITRUST_TOTAL = 0 + (rowSums(factor_df[science_cols] == "Strongly agree") * 2) +
(rowSums(factor_df[science_cols] == "Agree")) +
(rowSums(factor_df[science_cols] == "Disagree") * -1) +
(rowSums(factor_df[science_cols] == "Strongly disagree") * -2)
)
factor_df = apply_labels(factor_df,
SCITRUST_TOTAL="Composite score indicating trust or distrust in science overall. A negative score indicates greater distrust overall and a positive score indicates greater trust overall.")
# Chunk 25: create research participation sum score
factor_df <- factor_df %>%
mutate(HRES_TOTAL = 0 + (rowSums(factor_df[participation_cols] == "YES"))
)
factor_df = apply_labels(factor_df,
HRES_TOTAL="Summed score indicating research participation. Minimum value of 0 indicates no previous participation in research, maximum value of 3 indicates previous participation in survey, clinical trials and focus groups.")
# Chunk 26: list of vars for univariable analyses
all.vars <- c(
"Black_filter", "Asian_filter", "MDQuintile", "AGE", "AGE_BAND",
"SEX", "ETHNICITY", "ETHNICITY_LFS", "NUMPEOPLE", "NUMADULTS",
"NUMCHILDU16", "COHAB", "COHAB_BINARY", "MARSTAT", "CHILDHERE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "HHSTRUCTURE",
"PLACEINHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_LANDLINE", "DEVICE_TABLET", "DEVICE_CPU", "DEVICE_SMRTTV",
"DEVICE_GAME", "DEVICE_STREAM", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION", "QUALTYPE",
"EDUCATION", "DEGREE", "WorkingStatus_PrePandemic", "WorkingStatus_PrePandemic_Binary",
"WorkingStatus", "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"OCCUPATION_NSSEC", "TENURE", "LIFEEVENT", "PROSO_EVER_TOTAL",
"PROSO4W_TOTAL","DISABILITY",
"DISAB1", "DISAB2", "DISABEVER", "GENFAM", "GENTEST", "GENTEST_1",
"GENTEST_2", "GENTEST_3", "GENTEST_4", "GENTEST_5", "GENTEST_5OPEN",
"GENTTYP_1", "GENTTYP_2", "GENTTYP_3", "GENTTYP_4", "GENTTYP_5",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL","HACT12_1", "HACT12_2",
"HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "VIDEO", "AUDIO", "UNDERST", "OFHACT",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN", "OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3", "GENFBACK_1",
"GENFBACK_2", "GENFBACK_3", "PARTNA", "PARTNB", "OFHACT2", "RECONTACT",
"ofhact_agree", "ofhact_all", "ofhact_unsure", "GENFBACK_prevent_agree",
"GENFBACK_prevent_all", "GENFBACK_no_prevent_agree", "GENFBACK_no_prevent_all",
"GENFBACK_ancestry_agree", "GENFBACK_ancestry_all")
# Chunk 27: list of demographic vars for univariable analyses
dem.vars <- c(
"Black_filter", "Asian_filter", "MDQuintile", "AGE_BAND",
"SEX", "ETHNICITY", "ETHNICITY_LFS", "NUMPEOPLE", "MARSTAT",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "RELIGIOSITY", "RELIGION", "QUALTYPE",
"EDUCATION", "DEGREE", "WorkingStatus_PrePandemic", "WorkingStatus_PrePandemic_Binary",
"WorkingStatus", "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"OCCUPATION_NSSEC", "TENURE",  "DISABILITY",
"DISAB1", "DISAB2", "DISABEVER")
# Chunk 28: list of outcome vars for univariable analyses
primary.outcome.binary <- "ofhact_agree" # intention to participate
primary.outcome.all <- "ofhact_all" #intention to participate, including unsure
gen.outcome.preventable.binary <- "GENFBACK_prevent_agree"
gen.outcome.preventable.all <- "GENFBACK_prevent_all"
gen.outcome.nonpreventable.binary <- "GENFBACK_no_prevent_agree"
gen.outcome.nonpreventable.all <- "GENFBACK_no_prevent_all"
gen.outcome.ancestry.binary <- "GENFBACK_ancestry_agree"
gen.outcome.ancestry.all <- "GENFBACK_ancestry_all"
outcomes <- c("ofhact_agree","ofhact_all",
"GENFBACK_prevent_agree","GENFBACK_prevent_all",
"GENFBACK_no_prevent_agree","GENFBACK_no_prevent_all",
"GENFBACK_ancestry_agree","GENFBACK_ancestry_all")
# Chunk 29: list of independent vars for univariable analyses
pred.participate.vars <- c(
"MDQuintile",  "AGE_BAND",
"SEX", "ETHNICITY_LFS", "NUMPEOPLE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_TABLET", "DEVICE_CPU", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION",
"EDUCATION",  "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"LIFEEVENT", "PROSO_EVER_TOTAL","PROSO4W_TOTAL",
"GENFAM", "GENTEST",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL",
"HACT12_1", "HACT12_2", "HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "UNDERST", "OFHACT",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN", "OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3", "GENFBACK_1",
"GENFBACK_2", "GENFBACK_3", "PARTNA", "PARTNB", "OFHACT2", "RECONTACT",
"GENFBACK_prevent_agree",
"GENFBACK_prevent_all", "GENFBACK_no_prevent_agree", "GENFBACK_no_prevent_all",
"GENFBACK_ancestry_agree", "GENFBACK_ancestry_all")
pred.gen.vars <-c(
"MDQuintile",  "AGE_BAND",
"SEX", "ETHNICITY_LFS", "NUMPEOPLE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_TABLET", "DEVICE_CPU", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION",
"EDUCATION",  "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"LIFEEVENT", "PROSO_EVER_TOTAL","PROSO4W_TOTAL",  "GENFAM", "GENTEST",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL","HACT12_1", "HACT12_2", "HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "UNDERST", "OFHACT",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN", "OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3",
"PARTNA", "PARTNB", "OFHACT2", "RECONTACT","ofhact_agree", "ofhact_all", "ofhact_unsure")
all.pred.vars <- c(
"MDQuintile",  "AGE_BAND",
"SEX", "ETHNICITY_LFS", "NUMPEOPLE",
"NumOwnChildrenU16HH", "OwnChildU16OutsideHH", "INTERNET", "DEVICE_SMRTPHNE", "DEVICE_MOBILE",
"DEVICE_TABLET", "DEVICE_CPU", "DEVICE_WEAR", "DEVICE_TOTAL",
"DIGPROF_TOTAL", "FINNOW", "RELIGIOSITY", "RELIGION",
"EDUCATION",  "WorkingStatus_Binary", "OCCUPATION_SOC2010",
"LIFEEVENT", "PROSO_EVER_TOTAL","PROSO4W_TOTAL", "GENFAM", "GENTEST",
"DISABFAM", "AID", "HEALTH", "HRES_TOTAL","HACT12_1", "HACT12_2", "HACT12_3", "HACT12_4",
"TRUSTGEN", "TRUSTORG_A", "TRUSTORG_B", "TRUSTORG_C", "TRUSTORG_D",
"TRUSTORG_E", "SCIINT", "SCIINF", "SCITRUST_TOTAL",
"COVRES", "OFHAWARE", "UNDERST", "OFHACT",
"OFHPAIR_A", "OFHPAIR_B", "OFHPAIR_C", "OFHPAIR_D",
"OFHPAIR_E", "OFHBEN_1", "OFHBEN_2", "OFHBEN_3", "OFHBEN_4",
"OFHBEN_5", "OFHBEN_6", "OFHBEN_7", "OFHBEN_8", "OFHBEN_9", "OFHBENCL",
"BARRSA_1", "BARRSA_2", "BARRSA_3", "BARRSA_4", "BARRSB_1", "BARRSB_2",
"BLOODS_1", "BLOODS_2", "BLOODS_3", "BLOODS_4", "BLOODS_5", "BLOODS_6",
"BLOODS_7", "PRACBAR_1", "PRACBAR_2", "PRACBAR_3",
"PARTNA", "PARTNB", "OFHACT2", "RECONTACT")
gated.pred.vars <- c("GENTEST_1",
"GENTEST_2", "GENTEST_3", "GENTEST_4", "GENTEST_5", "GENTEST_5OPEN",
"GENTTYP_1", "GENTTYP_2", "GENTTYP_3", "GENTTYP_4", "GENTTYP_5",
"OFHYN_FREQ", "OFHYN_OPEN", "OFHDK_FREQ", "OFHDK_OPEN", "OFHDK2_FREQ",
"OFHDK2_OPEN")
frequency_and_plot(factor_df,Asian_filter)
